# Name of the GitHub Actions workflow
name: CI/CD Pipeline

# The workflow is triggered on push or pull request to the main branch
on:
  push:
    branches:
      - main # This workflow gets triggered when changes are pushed to the main branch
  pull_request:
    branches:
      - main  # This workflow also gets triggered on pull requests to the main branch

# Jobs to be executed in the workflow
jobs:
  
  # First job to run unit tests
  unit-test:
    runs-on: ubuntu-latest  # The type of runner that the job will run on
    steps:
      - uses: actions/checkout@v3  # Checks-out your repository under $GITHUB_WORKSPACE
      
      # This step installs the required dependencies and runs unit tests
      - name: Install Dependencies and Run Unit Tests
        run: |
          pip3 install pytest mongomock pymongo fastapi httpx  # Install dependencies
          cd backend/app/tests  # Navigate to the tests directory
          pytest  # Run the tests using pytest

  # Second job to build, push, and deploy the Docker image
  build-push-deploy:
    needs: unit-test
    runs-on: ubuntu-latest  # The type of runner that the job will run on
    
    # Environmental variables used in this job
    env:
      AWS_REGION: us-east-1  # AWS region
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # AWS access key ID
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # AWS secret access key
      PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}  # Private SSH key for accessing the server
      SERVER_PUBLIC_IP: ${{ secrets.HOSTNAME }}  # Server's public IP address
      SERVER_USER_NAME: ${{ secrets.USER_NAME }}  # Username for the server

    steps:
      - name: Checkout
        uses: actions/checkout@v3  # Checks-out your repository under $GITHUB_WORKSPACE

      # This step builds the Docker image and pushes it to the Docker registry, to be able to use docker-compose push we add image tag with DockerHub Registry
      - name: Build, Tag and Push
        run: |
          docker-compose build

          sleep 5 
 
          docker tag  levigab/job_listing-api:latest levigab/job_listing-api:latest
          docker tag  levigab/job_listing-frontend:latest levigab/job_listing-frontend:latest
          docker tag  levigab/job_listing-airflow-webserver:latest levigab/job_listing-airflow-webserver:latest
          docker tag  levigab/job_listing-airflow-scheduler:latest levigab/job_listing-airflow-scheduler:latest
          docker tag  levigab/job_listing-airflow-worker:latest levigab/job_listing-airflow-worker:latest
          docker tag  levigab/job_listing-airflow-init:latest levigab/job_listing-airflow-init:latest
          docker tag  levigab/job_listing-airflow-flower:latest levigab/job_listing-airflow-flower:latest

          docker login -u ${{ secrets.REGISTRY_USER }} -p ${{ secrets.REGISTRY_PASSWD }}  # Login to the Docker registry
 
          docker-compose push 
      # Airflow images are not to be deployed below as they are to heavy for the AWS ECS instance, it crashes the instance
      - name: Deploy Docker Image MongoDB
        uses: appleboy/ssh-action@master
        with:
          script: |
            # Deploy and run MongoDB image
            sudo docker rm -f levigab/mongo
            sudo docker rmi levigab/mongo:latest
            sleep 10
            sudo docker pull levigab/mongo:latest
            sudo docker run -d -p 27017:27017 levigab/mongo:latest

      - name: Deploy Docker Image API
        uses: appleboy/ssh-action@master
        with:
          script: |
            # Deploy and run API image
            sudo docker rm -f levigab/job_listing-api
            sudo docker rmi levigab/job_listing-api:latest
            sleep 10
            sudo docker pull levigab/job_listing-api:latest
            sudo docker run -d -p 8000:8000 levigab/job_listing-api:latest

      - name: Deploy Docker Image Frontend
        uses: appleboy/ssh-action@master
        with:
          script: |
            # Deploy and run Frontend image
            sudo docker rm -f levigab/job_listing-frontend
            sudo docker rmi levigab/job_listing-frontend:latest
            sleep 10
            sudo docker pull levigab/job_listing-frontend:latest
            sudo docker run -d -p 3000:3000 levigab/job_listing-frontend:latest

      - name: Deploy Docker Images Postgres
        uses: appleboy/ssh-action@master
        with:
          script: |
            # Deploy and run Postgres image
            sudo docker rm -f levigab/postgres
            sudo docker rmi levigab/postgres:13
            sleep 10
            sudo docker pull levigab/postgres:13
            sudo docker run -d levigab/postgres:13

      - name: Deploy Docker Image Redis
        uses: appleboy/ssh-action@master
        with:
          script: |
            # Deploy and run Redis image
            sudo docker rm -f levigab/redis
            sudo docker rmi levigab/redis:latest
            sleep 10
            sudo docker pull levigab/redis:latest
            sudo docker run -d -p 6379:6379 levigab/redis:latest
